<UserControl x:Class="Nodify.Calculator.EditorView"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Nodify.Calculator"
             xmlns:nodify="https://miroiu.github.io/nodify"
             xmlns:shared="clr-namespace:Nodify;assembly=Nodify.Shared"
             xmlns:sys="clr-namespace:System;assembly=System.Runtime"
             xmlns:collections="clr-namespace:System.Collections;assembly=System.Runtime"
             xmlns:compatibility="clr-namespace:Nodify.Compatibility;assembly=Nodify"
             d:DataContext="{d:DesignInstance Type=local:EditorViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <UserControl.Resources>
        <local:BoolToBrushConverter x:Key ="BoolToBrushConverter"/>
        <local:SuccessFailureBrushConverter x:Key="SuccessFailureBrushConverter" />
        <local:SuccessFailureBackgroundConverter x:Key="SuccessFailureBackgroundConverter" />



        <GeometryDrawing x:Key="SmallGridGeometry"
                         Geometry="M0,0 L0,1 0.03,1 0.03,0.03 1,0.03 1,0 Z"
                         Brush="{DynamicResource GridLinesBrush}" />

        <GeometryDrawing x:Key="LargeGridGeometry"
                         Geometry="M0,0 L0,1 0.015,1 0.015,0.015 1,0.015 1,0 Z"
                         Brush="{DynamicResource GridLinesBrush}" />

        <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                      TileMode="Tile"
                      DestinationRect="0 0 15 15"
                      TransformOrigin="0,0"
                      Transform="{Binding DpiScaledViewportTransform, ElementName=Editor}"
                      Drawing="{StaticResource SmallGridGeometry}" />

        <DrawingBrush x:Key="LargeGridLinesDrawingBrush"
                      TileMode="Tile"
                      Opacity="0.5"
                      DestinationRect="0 0 150 150"
                      Transform="{Binding DpiScaledViewportTransform, ElementName=Editor}"
                      Drawing="{StaticResource LargeGridGeometry}" />

        <LinearGradientBrush x:Key="BorderBrush" 
                             StartPoint="0%,0%" 
                             EndPoint="100%,0%">
            <GradientStop Color="#6366f1"
                          Offset="0" />
            <GradientStop Color="#a855f7"
                          Offset="0.5" />
            <GradientStop Color="#ec4899"
                          Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="BorderBrushDRAFT"
                           StartPoint="0%,0%"
                           EndPoint="100%,0%">
            <GradientStop Color="#ffffff"
                          Offset="0" />
            <GradientStop Color="#ffffff"
                          Offset="0.5" />
            <GradientStop Color="#ffffff"
                          Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SuccessBrush"
                     StartPoint="0%,0%"
                     EndPoint="100%,0%">
            <GradientStop Color="#00ff00" Offset="0" />
            <GradientStop Color="#008000" Offset="0.5" />
            <GradientStop Color="#004d00" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="FailureBrush"
                             StartPoint="0%,0%"
                             EndPoint="100%,0%">
            <GradientStop Color="#ff0000" Offset="0" />
            <GradientStop Color="#800000" Offset="0.5" />
            <GradientStop Color="#4d0000" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultBrush"
                             StartPoint="0%,0%"
                             EndPoint="100%,0%">
            <GradientStop Color="#ffffff" Offset="0" />
            <GradientStop Color="#ffffff" Offset="0.5" />
            <GradientStop Color="#ffffff" Offset="1" />
        </LinearGradientBrush>
        
        <Animation x:Key="BorderBrushAnimation"
            FillMode="None"
            IterationCount="Infinite"
            x:SetterTargetType="ContentControl"
            Duration="0:0:8">
            <KeyFrame Cue="0%">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="100%,0%" EndPoint="0%,100%">
                            <GradientStop Color="#6366f1" Offset="0" />
                            <GradientStop Color="#a855f7" Offset="0.5" />
                            <GradientStop Color="#ec4899" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </KeyFrame>
            <KeyFrame Cue="25%">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="100%,100%" EndPoint="0%,0%">
                            <GradientStop Color="#6366f1" Offset="0" />
                            <GradientStop Color="#a855f7" Offset="0.5" />
                            <GradientStop Color="#ec4899" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </KeyFrame>
            <KeyFrame Cue="50%">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0%,100%" EndPoint="100%,0%">
                            <GradientStop Color="#6366f1" Offset="0" />
                            <GradientStop Color="#a855f7" Offset="0.5" />
                            <GradientStop Color="#ec4899" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </KeyFrame>
            <KeyFrame Cue="75%">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
                            <GradientStop Color="#6366f1" Offset="0" />
                            <GradientStop Color="#a855f7" Offset="0.5" />
                            <GradientStop Color="#ec4899" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </KeyFrame>
            <KeyFrame Cue="100%">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="100%,0%" EndPoint="0%,100%">
                            <GradientStop Color="#6366f1" Offset="0" />
                            <GradientStop Color="#a855f7" Offset="0.5" />
                            <GradientStop Color="#ec4899" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </KeyFrame>
        </Animation>

        <local:ItemToListConverter x:Key="ItemToListConverter" />

        <DataTemplate x:Key="ConnectionTemplate"
                      DataType="{x:Type local:ConnectionViewModel}">
            <nodify:CircuitConnection Source="{Binding Output.Anchor}"
                                      Target="{Binding Input.Anchor}" />
        </DataTemplate>

        <DataTemplate x:Key="PendingConnectionTemplate"
                      DataType="{x:Type local:PendingConnectionViewModel}">
            <nodify:PendingConnection IsVisible="{Binding IsVisible}"
                                      Source="{Binding Source, Mode=OneWayToSource}"
                                      Target="{Binding Target, Mode=OneWayToSource}"
                                      TargetAnchor="{Binding TargetLocation, Mode=OneWayToSource}"
                                      StartedCommand="{Binding DataContext.StartConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}"
                                      CompletedCommand="{Binding DataContext.CreateConnectionCommand, RelativeSource={RelativeSource AncestorType={x:Type nodify:NodifyEditor}}}" />
        </DataTemplate>
        
        <!--EKRANA SÜRÜKLEDİĞİN NODEUN STYLE'I BURADAN AYARLANIR-->
        <ControlTheme x:Key="ItemContainerStyle"
               TargetType="{x:Type nodify:ItemContainer}"
               BasedOn="{StaticResource {x:Type nodify:ItemContainer}}">
            <Setter Property="Location"
                    Value="{Binding Location}" />
            <Setter Property="IsSelected"
                    Value="{Binding IsSelected}" />
            <Setter Property="ActualSize"
                    Value="{Binding Size, Mode=OneWayToSource}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource BorderBrush}" />
            <Setter Property="BorderThickness"
                    Value="2" />
        </ControlTheme>
        
    </UserControl.Resources>

    <Grid>
        <nodify:NodifyEditor DataContext="{Binding Calculator}"
                             ItemsSource="{Binding Operations}"
                             Connections="{Binding Connections}"
                             SelectedItems="{Binding SelectedOperations}"
                             DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                             PendingConnection="{Binding PendingConnection}"
                             PendingConnectionTemplate="{StaticResource PendingConnectionTemplate}"
                             ConnectionTemplate="{StaticResource ConnectionTemplate}"
                             Background="{StaticResource SmallGridLinesDrawingBrush}"
                             ItemContainerTheme="{StaticResource ItemContainerStyle}"
                             GridCellSize="15"
                             DragDrop.AllowDrop="True"
                             x:Name="Editor">
            <nodify:NodifyEditor.Resources>
                <ControlTheme TargetType="{x:Type nodify:NodeInput}" x:Key="{x:Type nodify:NodeInput}"
                       BasedOn="{StaticResource {x:Type nodify:NodeInput}}">
                    <Setter Property="Header"
                            Value="{Binding}" />
                    <Setter Property="IsConnected"
                            Value="{Binding IsConnected}" />
                    <Setter Property="Anchor"
                            Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="(ToolTip.Tip)"
                            Value="{Binding Value}" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Title}"
                                               VerticalAlignment="Center"
                                               Margin="0 0 5 0" />
                                    <TextBox Text="{Binding Value}"
                                             IsVisible="{Binding !IsConnected}" />
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </ControlTheme>

                <ControlTheme TargetType="{x:Type nodify:NodeOutput}" x:Key="{x:Type nodify:NodeOutput}"
                       BasedOn="{StaticResource {x:Type nodify:NodeOutput}}">
                    <Setter Property="Header"
                            Value="{Binding}" />
                    <Setter Property="IsConnected"
                            Value="{Binding IsConnected}" />
                    <Setter Property="Anchor"
                            Value="{Binding Anchor, Mode=OneWayToSource}" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                <TextBox Text="{Binding Value}"
                                         IsEnabled="False" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </ControlTheme>
            </nodify:NodifyEditor.Resources>
            
            <nodify:NodifyEditor.DataTemplates>
                <DataTemplate DataType="{x:Type local:OperationGraphViewModel}">
                    <nodify:GroupingNode Header="{Binding}"
                                         CanResize="{Binding IsExpanded}"
                                         ActualSize="{Binding DesiredSize, Mode=TwoWay}"
                                         MovementMode="Self">
                        <nodify:GroupingNode.HeaderTemplate>
                            <DataTemplate DataType="{x:Type local:OperationGraphViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{Binding Title}" />
                                    <StackPanel Orientation="Horizontal"
                                                Margin="5 0 0 0"
                                                Grid.Column="1">
                                        <TextBlock Text="Expand?"
                                                   IsVisible="{Binding IsExpanded}"
                                                   Margin="0 0 5 0" />
                                        <CheckBox IsChecked="{Binding IsExpanded}" />
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </nodify:GroupingNode.HeaderTemplate>
                        
                        <Grid>
                            <ScrollViewer 
                                HorizontalScrollBarVisibility="Auto"
                                VerticalScrollBarVisibility="Auto">
                                <nodify:NodifyEditor Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}"
                                                     DataContext="{Binding InnerCalculator}"
                                                     ItemsSource="{Binding Operations}"
                                                     Connections="{Binding Connections}"
                                                     SelectedItems="{Binding SelectedOperations}"
                                                     DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                                                     PendingConnection="{Binding PendingConnection}"
                                                     PendingConnectionTemplate="{StaticResource PendingConnectionTemplate}"
                                                     ConnectionTemplate="{StaticResource ConnectionTemplate}"
                                                     ItemContainerTheme="{StaticResource ItemContainerStyle}"
                                                     Background="Transparent"
                                                     GridCellSize="15"
                                                     DragDrop.AllowDrop="True"
                                                     IsVisible="{Binding DataContext.IsExpanded, RelativeSource={RelativeSource AncestorType=nodify:GroupingNode}, Converter={shared:BooleanToVisibilityConverter}}">

                                    <nodify:NodifyEditor.KeyBindings>
                                        <KeyBinding Gesture="Delete"
                                                    Command="{Binding DeleteSelectionCommand}" />
                                        <KeyBinding Gesture="C"
                                                    Command="{Binding GroupSelectionCommand}" />
                                    </nodify:NodifyEditor.KeyBindings>

                                    <nodify:NodifyEditor.Decorators>
                                        <collections:ArrayList>
                                            <nodify:DecoratorContainer DataContext="{Binding OperationsMenu}"
                                                                       Location="{Binding Location}">
                                                <local:OperationsMenuView />
                                            </nodify:DecoratorContainer>
                                        </collections:ArrayList>
                                    </nodify:NodifyEditor.Decorators>
                                </nodify:NodifyEditor>
                            </ScrollViewer>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ItemsControl ItemsSource="{Binding Input}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <nodify:NodeInput />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <nodify:NodeOutput DataContext="{Binding Output}"
                                                   Grid.Column="1"
                                                   VerticalAlignment="Top"
                                                   HorizontalAlignment="Right" />
                            </Grid>
                        </Grid>
                    </nodify:GroupingNode>
                </DataTemplate>
                
                <DataTemplate DataType="{x:Type local:ExpandoOperationViewModel}">
                    <nodify:Node Header="{Binding Title}"
                                 Content="{Binding}"
                                 Input="{Binding Input}"
                                 Output="{Binding Output, Converter={StaticResource ItemToListConverter}}">
                        <nodify:Node.ContentTemplate>
                            <DataTemplate DataType="{x:Type local:ExpandoOperationViewModel}">
                                <StackPanel>
                                    <Button Theme="{StaticResource IconButton}"
                                            Content="{StaticResource PlusIcon}"
                                            Command="{Binding AddInputCommand}" />
                                    <Button Theme="{StaticResource IconButton}"
                                            Content="{StaticResource RemoveKeyIcon}"
                                            Command="{Binding RemoveInputCommand}" />
                                </StackPanel>
                            </DataTemplate>
                        </nodify:Node.ContentTemplate>
                    </nodify:Node>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:ExpressionOperationViewModel}">
                    <nodify:Node Content="{Binding}"
                                 Input="{Binding Input}"
                                 Output="{Binding Output, Converter={StaticResource ItemToListConverter}}">
                        <nodify:Node.ContentTemplate>
                            <DataTemplate DataType="{x:Type local:ExpressionOperationViewModel}">
                                <TextBox Text="{Binding Expression}"
                                         MinWidth="100"
                                         Margin="5 0 0 0" />
                            </DataTemplate>
                        </nodify:Node.ContentTemplate>
                    </nodify:Node>
                </DataTemplate>
                <!--!!!!!!!!!!!!!!! BURASI ÖZELLEŞTİRİLMİŞ BİR OPERATION TANIMLAMASI YAPMAK İSTEDİĞİNDE YAP-->
                <DataTemplate DataType="{x:Type local:CheckSameOperationViewModel}">
                    <nodify:Node Header="{Binding Title}"
                                 Input="{Binding Input}"
                                 Output="{Binding Output, Converter={StaticResource ItemToListConverter}}"
                                 BorderBrush="{Binding IsSuccess, Converter={StaticResource SuccessFailureBrushConverter}}"
                                 Background="{Binding IsSuccess, Converter={StaticResource SuccessFailureBackgroundConverter}}"
                                 BorderThickness="2">
                        <nodify:Node.ContentTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical" Margin="5">

                                    <!-- Title -->
                                    <TextBlock Text="{Binding Title}" FontWeight="Bold" Margin="0 0 5 0" />

                                  
                                </StackPanel>
                            </DataTemplate>
                        </nodify:Node.ContentTemplate>
                    </nodify:Node>
                </DataTemplate>



                <DataTemplate DataType="{x:Type local:CalculatorOperationViewModel}">
                    <nodify:Node Header="{Binding Title}"
                                 Input="{Binding Input}"
                                 Output="{Binding Output, Converter={StaticResource ItemToListConverter}}"
                                 ToolTip.Tip="Double click to expand">
                        <Interaction.Behaviors>
                            <RoutedEventTriggerBehavior RoutedEvent="{x:Static InputElement.DoubleTappedEvent}">
                                <InvokeCommandAction Command="{Binding DataContext.OpenCalculatorCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                     CommandParameter="{Binding InnerCalculator}" />
                            </RoutedEventTriggerBehavior>
                        </Interaction.Behaviors>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:CalculatorInputOperationViewModel}">
                    <nodify:Node Header="{Binding Title}"
                                 Output="{Binding Output}">
                        <StackPanel>
                            <Button Theme="{StaticResource IconButton}"
                                    Content="{StaticResource PlusIcon}"
                                    Command="{Binding AddOutputCommand}" />
                            <Button Theme="{StaticResource IconButton}"
                                    Content="{StaticResource RemoveKeyIcon}"
                                    Command="{Binding RemoveOutputCommand}" />
                        </StackPanel>
                        
                        <nodify:Node.Resources>
                            <ControlTheme TargetType="{x:Type nodify:NodeOutput}" x:Key="{x:Type nodify:NodeOutput}"
                                          BasedOn="{StaticResource {x:Type nodify:NodeOutput}}">
                                <Setter Property="Header"
                                        Value="{Binding}" />
                                <Setter Property="IsConnected"
                                        Value="{Binding IsConnected}" />
                                <Setter Property="Anchor"
                                        Value="{Binding Anchor, Mode=OneWayToSource}" />
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate DataType="{x:Type local:ConnectorViewModel}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBox Text="{Binding Value}"
                                                         IsEnabled="False" />
                                                <TextBlock Text="{Binding Title}"
                                                           Margin="5 0 0 0" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </ControlTheme>
                        </nodify:Node.Resources>
                    </nodify:Node>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:OperationGroupViewModel}">
                    <nodify:GroupingNode Header="{Binding Title}"
                                         ActualSize="{Binding GroupSize, Mode=TwoWay}" />
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:OperationViewModel}">
                    <nodify:Node Content="{Binding Title}"
                                 Input="{Binding Input}"
                                 Output="{Binding Output, Converter={StaticResource ItemToListConverter}}" />
                </DataTemplate>
            </nodify:NodifyEditor.DataTemplates>
            
            <nodify:NodifyEditor.KeyBindings>
                <KeyBinding Gesture="Delete"
                            Command="{Binding DeleteSelectionCommand}" />
                <KeyBinding Gesture="C"
                            Command="{Binding GroupSelectionCommand}" />
            </nodify:NodifyEditor.KeyBindings>
            
            <nodify:NodifyEditor.Decorators>
                <collections:ArrayList>
                    <nodify:DecoratorContainer DataContext="{Binding OperationsMenu}"
                                               Location="{Binding Location}">
                        <local:OperationsMenuView />
                    </nodify:DecoratorContainer>
                </collections:ArrayList>
            </nodify:NodifyEditor.Decorators>
        </nodify:NodifyEditor>

        <Grid Background="{StaticResource LargeGridLinesDrawingBrush}"
              Panel.ZIndex="-2" />

        <Border HorizontalAlignment="Right"
                MinWidth="200"
                MaxWidth="300"
                Padding="7"
                Margin="10"
                CornerRadius="3"
                BorderThickness="2">
            <Border.Background>
                <SolidColorBrush Color="{DynamicResource BackgroundColor}"
                                 Opacity="0.7" />
            </Border.Background>
            <ScrollViewer>
                <ItemsControl ItemsSource="{Binding Calculator.OperationsMenu.AvailableOperations}">
                    <ItemsControl.ItemContainerTheme>
                        <ControlTheme TargetType="{x:Type ContentPresenter}">
                            <Setter Property="Control.Margin" 
                                    Value="5"/>
                            <Setter Property="Control.HorizontalAlignment" 
                                    Value="Left"/>
                            <Setter Property="Control.Cursor" 
                                    Value="Hand"/>
                            <Setter Property="(ToolTip.Tip)" 
                                    Value="Drag and drop into the editor"/>
                        </ControlTheme>
                    </ItemsControl.ItemContainerTheme>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:OperationInfoViewModel}">
                            <nodify:Node Content="{Binding Title}"
                                         Input="{Binding Input}"
                                         BorderBrush="{StaticResource BorderBrush}"
                                         BorderThickness="2"
                                         PointerPressed="OnNodePressed"
                                         PointerExited="OnNodeExited"
                                         PointerMoved="OnNodeDrag">
                                <nodify:Node.Output>
                                    <collections:ArrayList>
                                        <sys:String>Output</sys:String>
                                    </collections:ArrayList>
                                </nodify:Node.Output>
                                 <nodify:Node.Styles>
                                     <!--nodify namespaceinin altındaki Node kontrolünü elde etmiş olmak istiyorum-->
                                     <Style Selector="nodify|Node"> 
                                         <Style.Animations> 
                                             <StaticResource ResourceKey="BorderBrushAnimation" /> 
                                         </Style.Animations> 
                                     </Style> 
                                 </nodify:Node.Styles> 
                            </nodify:Node>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>
